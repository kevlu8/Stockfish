/*
  Stockfish, a UCI chess playing engine derived from Glaurung 2.1
  Copyright (C) 2004-2025 The Stockfish developers (see AUTHORS file)

  Stockfish is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Stockfish is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef CUTNET_H_INCLUDED
#define CUTNET_H_INCLUDED

namespace CutNet {
	constexpr float fc1_w[32][7] = {
		{0.571593f, 0.353319f, 0.621374f, -0.621861f, -0.024426f, 0.313694f, 0.197502f},
		{-0.038824f, -0.963656f, -0.240205f, 0.265881f, -0.229264f, -0.416270f, -0.871736f},
		{-0.158830f, -0.605445f, -0.159874f, 0.443252f, 0.680769f, 0.387230f, 0.098749f},
		{-0.140420f, 0.181699f, -0.139217f, -1.774566f, -0.447880f, 0.028883f, -0.011209f},
		{0.910441f, -0.100296f, -0.027104f, 0.812240f, 0.010772f, 0.694573f, -0.817603f},
		{-1.235507f, 0.093512f, -0.409545f, -1.426359f, 0.012494f, 0.002657f, -0.052178f},
		{0.009651f, 0.472526f, 0.172261f, 0.234431f, 0.059433f, 0.630695f, -0.536153f},
		{0.409301f, 0.946486f, 0.343371f, -0.128328f, -0.653052f, 0.736133f, 0.180739f},
		{0.373901f, 1.215389f, 0.112670f, 0.146978f, 0.057766f, -0.386663f, -0.141864f},
		{-0.115046f, 0.689258f, 0.864633f, -0.459084f, 0.431079f, 0.543628f, -0.018610f},
		{-0.029697f, -0.149481f, 0.005384f, 2.092903f, -0.011332f, -0.048694f, -0.032976f},
		{0.018238f, -1.946425f, -0.040900f, -0.264250f, 0.004734f, 0.536112f, -0.198734f},
		{0.148022f, -0.047589f, 0.065905f, 0.393007f, 0.074091f, 0.395395f, 0.756291f},
		{-0.296843f, -0.206709f, -0.164538f, -0.110444f, -0.013022f, 0.202623f, -0.775797f},
		{-0.121015f, -0.713476f, -0.017434f, 1.161965f, -0.255194f, -1.441035f, 0.368914f},
		{-0.072035f, 0.037186f, 0.607511f, 0.858929f, -0.281859f, 0.003308f, -0.001777f},
		{0.448505f, -0.575379f, 0.335689f, 1.306632f, 0.013427f, 0.313142f, 0.029689f},
		{-0.488655f, -0.553412f, 0.220337f, 0.960680f, 0.022655f, -0.029185f, -0.015648f},
		{0.323318f, -0.514813f, 0.209798f, 1.018062f, 0.006166f, 0.237722f, 0.114702f},
		{-0.180542f, 0.104352f, 0.070105f, 0.085550f, 0.902910f, 0.792248f, -0.438923f},
		{-0.511509f, -0.001967f, 0.045464f, -1.845497f, 0.765897f, 0.411962f, 0.019236f},
		{-0.137682f, -0.365815f, 0.659569f, 1.153512f, -0.311582f, 0.263593f, -0.016129f},
		{0.127288f, -0.907668f, -0.060070f, 0.979093f, 0.582869f, -1.972119f, -0.099770f},
		{0.010036f, -0.026995f, -0.052152f, 1.684039f, -0.006885f, -1.415287f, -0.007981f},
		{0.046513f, -1.348812f, 0.018572f, -0.121656f, 0.028110f, 0.134589f, 0.618318f},
		{0.426366f, 0.976707f, 0.116888f, -0.106609f, 1.051180f, 0.009178f, 0.599385f},
		{-0.142134f, 1.976922f, -0.002245f, 0.059025f, -0.030613f, -0.212901f, -0.063137f},
		{0.632027f, 0.578111f, 0.028569f, -0.078580f, 1.146802f, 0.157076f, -1.030377f},
		{0.274829f, 0.097395f, -0.006737f, 0.622576f, 0.063235f, 0.260426f, 0.849424f},
		{-0.482446f, -0.049375f, 0.220950f, -1.845857f, -0.741100f, 0.144056f, 0.003759f},
		{0.389914f, 0.968345f, 0.319758f, -0.330945f, -1.048670f, -0.398618f, 0.129084f},
		{-0.002036f, 0.077476f, 0.466469f, -2.234245f, 0.039547f, -0.228613f, 0.024957f}
	};
	constexpr float fc1_b[32] = {
		0.19228054583072662, -0.17064790427684784, 0.31725093722343445, -0.2999558746814728, 0.13631592690944672, 0.7585178017616272, -0.2074337750673294, 0.20255319774150848, 0.3870052099227905, 0.3151405453681946, 0.07591472566127777, 0.43281665444374084, 0.49052971601486206, -0.6109611988067627, -0.191349059343338, -0.262893944978714, 0.4963132441043854, 0.36346012353897095, 0.5317344665527344, -0.45074576139450073, -0.06609649956226349, 0.236016184091568, 0.25973066687583923, 0.061661504209041595, 0.4137057960033417, 0.24327273666858673, 0.36249223351478577, 0.25108543038368225, 0.6014304757118225, -0.3035268187522888, 0.11067645251750946, 0.20094481110572815
	};
	constexpr float fc2_w[32] = {
		-0.309289f, 0.600970f, 0.534624f, -1.373209f, 0.668371f, -1.516030f, 0.374232f, -0.562134f, 0.762418f, -0.682450f, -1.326088f, -1.095652f, 0.768553f, 1.222318f, 0.821617f, -0.534293f, 0.361358f, -0.584469f, 0.416951f, 1.029601f, 1.098979f, 0.536000f, 0.862938f, -1.272059f, -0.744096f, -0.871090f, 1.226499f, -0.848022f, 0.632260f, 1.730082f, -0.894021f, 1.096081f
	};
	constexpr float fc2_b = -0.10538772493600845;

	bool shouldCut(int depth, int dStaticEval, bool ttHit, int dttDepth, int correctionValue, bool improving, bool dSimpleEval);
}  // namespace CutNet

#endif  // CUTNET_H_INCLUDED